// Code generated by protoc-gen-go. DO NOT EDIT.
// source: percentage.proto

/*
Package percentage is a generated protocol buffer package.

It is generated from these files:
	percentage.proto

It has these top-level messages:
	Request
	Response
*/
package percentage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Dividend int64 `protobuf:"varint,1,opt,name=dividend" json:"dividend,omitempty"`
	Divisor  int64 `protobuf:"varint,2,opt,name=divisor" json:"divisor,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetDividend() int64 {
	if m != nil {
		return m.Dividend
	}
	return 0
}

func (m *Request) GetDivisor() int64 {
	if m != nil {
		return m.Divisor
	}
	return 0
}

type Response struct {
	Percentage float32 `protobuf:"fixed32,1,opt,name=percentage" json:"percentage,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetPercentage() float32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "percentage.Request")
	proto.RegisterType((*Response)(nil), "percentage.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Percentage service

type PercentageClient interface {
	Calculate(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type percentageClient struct {
	cc *grpc.ClientConn
}

func NewPercentageClient(cc *grpc.ClientConn) PercentageClient {
	return &percentageClient{cc}
}

func (c *percentageClient) Calculate(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/percentage.Percentage/Calculate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Percentage service

type PercentageServer interface {
	Calculate(context.Context, *Request) (*Response, error)
}

func RegisterPercentageServer(s *grpc.Server, srv PercentageServer) {
	s.RegisterService(&_Percentage_serviceDesc, srv)
}

func _Percentage_Calculate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PercentageServer).Calculate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/percentage.Percentage/Calculate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PercentageServer).Calculate(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Percentage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "percentage.Percentage",
	HandlerType: (*PercentageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Calculate",
			Handler:    _Percentage_Calculate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "percentage.proto",
}

func init() { proto.RegisterFile("percentage.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x48, 0x2d, 0x4a,
	0x4e, 0xcd, 0x2b, 0x49, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x88,
	0x28, 0xd9, 0x73, 0xb1, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x71, 0x71, 0xa4,
	0x64, 0x96, 0x65, 0xa6, 0xa4, 0xe6, 0xa5, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0xc1, 0xf9,
	0x42, 0x12, 0x5c, 0xec, 0x20, 0x76, 0x71, 0x7e, 0x91, 0x04, 0x13, 0x58, 0x0a, 0xc6, 0x55, 0xd2,
	0xe2, 0xe2, 0x08, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x92, 0xe3, 0x42, 0x32, 0x1a,
	0x6c, 0x06, 0x53, 0x10, 0x92, 0x88, 0x91, 0x1b, 0x17, 0x57, 0x00, 0x9c, 0x27, 0x64, 0xc1, 0xc5,
	0xe9, 0x9c, 0x98, 0x93, 0x5c, 0x9a, 0x93, 0x58, 0x92, 0x2a, 0x24, 0xac, 0x87, 0xe4, 0x4c, 0xa8,
	0x8b, 0xa4, 0x44, 0x50, 0x05, 0x21, 0xb6, 0x28, 0x31, 0x24, 0xb1, 0x81, 0xfd, 0x61, 0x0c, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x12, 0xc1, 0x98, 0x55, 0xdb, 0x00, 0x00, 0x00,
}
